data<-read.csv(unz("activity.zip","activity.csv"))
View(data)
sumStepsPerDay<-aggregate(steps ~ date,data)
sumStepsPerDay<-aggregate(steps ~ date,data,sum)
View(sumStepsPerDay)
table(sumStepsPerDay)
head(table(sumStepsPerDay))
head(table(sumStepsPerDay),5)
head(sumStepsPerDay,5)
qplot(sumStepsPerDay,geom="histogram")
library(ggplot2)
qplot(sumStepsPerDay,geom="histogram")
qplot(sumStepsPerDay$date,geom="histogram")
qplot(sumStepsPerDay$steps,geom="histogram")
ggplot(data=sumStepsPerDay, aes(sumStepsPerDay$steps)) + geom_histogram()
help(ggplot)
total.steps <- tapply(data$steps, data$date, FUN = sum, na.rm = TRUE)
qplot(total.steps, binwidth = 1000, xlab = "total number of steps taken each day")
mean(total.steps, na.rm = TRUE)
sumStepsPerDay<-aggregate(steps ~ date,data,sum,na.rm=TRUE)
head(total.steps,5)
head(sumStepsPerDay,5)
median(total.steps, na.rm = TRUE)
sumStepsPerDay$date
help("aggregate")
sumStepsPerDay<-aggregate(steps,by date,data,sum,na.rm=TRUE)
sumStepsPerDay<-aggregate(steps,by=date,data,sum,na.rm=TRUE)
sumStepsPerDay<-aggregate(data$steps,by=date,data,sum,na.rm=TRUE)
sumStepsPerDay<-tapply(data$steps, data$date, FUN = sum, na.rm = TRUE)
View(data)
sumStepsPerDay<-aggregate(steps ~ date,data,sum,na.rm=FALSE)
sumStepsPerDay<-aggregate(steps ~ date,data,sum,na.rm=TRUE)
sumStepsPerDay<-aggregate(steps ~ date,data,sum,na.action=na.pass,na.rm=TRUE)
help("mean")
Stepsmean<-mean(sumStepsPerDay$steps,na.rm=TRUE,trim=0)
Stepsmean<-mean(sumStepsPerDay$steps,na.rm=TRUE,trim=0.5)
Stepsmean<-mean(sumStepsPerDay$steps,na.rm=TRUE,trim=0.1)
Stepsmean<-mean(sumStepsPerDay$steps,na.rm=TRUE,trim=0)
mean(total.steps, na.rm = TRUE)
integ(mean(total.steps, na.rm = TRUE))
int(mean(total.steps, na.rm = TRUE))
integer(mean(total.steps, na.rm = TRUE))
as.integer(mean(total.steps, na.rm = TRUE))
average<-aggregate(steps~interval,data,mean,na.rm=TRUE,na.action=na.pass)
ggplot(data = average, aes(x = average$interval, y = average$steps)) + geom_line() + xlab("5-minute interval") +
ylab("average number of steps taken")
max<-average[which.max(average$steps),]
print(max)
max[1,]
max[,1]
max[,0]
max[,2]
max[,3]
View(max)
View(average)
is.na(data)
table(is.na(data))
totalmissingValue<-table(is.na(data$steps))
totalmissingValue
totalmissingValue<-table(is.na(data$steps))
There are `r totalmissingValue` rows missed value.
print(totalmissingValue)
print(totalmissingValue[,1])
print(totalmissingValue[1,])
print(totalmissingValue[1])
print(totalmissingValue[2])
missing<-is.na(data$steps)
data[missing,]
data[missing]
data[is.na(data)]<-Stepsmean
filleddata<-data[is.na(data)]<-Stepsmean
data<-read.csv(unz("activity.zip","activity.csv"))
filleddata<-data
filleddata[is.na(filleddata)]<-Stepsmean
filleddata<-data
fillvalue<-function(steps,interval){
filled<-NA
if (is.na(steps))
filled<-(average[average$interval==interval,"steps"])
else filled<-c(steps)
return(filled)
}
filleddata$steps<-mapply(fillvalue,filleddata$steps,filleddata$interval)
View(filleddata)
filled<-NA
filled
average
average$interval
average[average$interval==2305,"steps"]
averagedate<-aggregate(steps~date,data,mean,na.rm=TRUE,na.action=na.pass)
averagedate<-aggregate(steps~date,data,mean,na.rm=TRUE,na.action=na.pass)
fillvalue<-function(steps,date){
filled<-NA
if (is.na(steps))
filled<-(averagedate[averagedate$date==date,"steps"])
else filled<-c(steps)
return(filled)
}
filleddata<-data
filleddata$steps<-mapply(fillvalue,filleddata$steps,filleddata$date)
averagedate[averagedate$date==date,"steps
]
averagedate$date
averagedate[averagedate$date==2012-10-02,"steps"]
averagedate[averagedate$date==2012-10-03,"steps"]
averagedate
averagedate<-aggregate(steps~date,data,mean,na.rm=TRUE,na.action=na.fill)
averagedate<-aggregate(steps~date,data,mean,na.rm=TRUE)
averagedate
averagedate<-aggregate(steps~date,data,mean,na.rm=TRUE,na.action=na.pass)
averagedate
averagedate[is.nan(averagedate)]<-0
is.nan(averagedate)
averagedate[averagedate$date=="date"2012-11-29","steps"]
averagedate[averagedate$date=="2012-11-29","steps"]
fillvalue<-function(steps,date){
filled<-NA
if (is.na(steps))
filled<-(averagedate[averagedate$date=="date","steps"])
else filled<-c(steps)
return(filled)
}
filleddata<-data
filleddata$steps<-mapply(fillvalue,filleddata$steps,filleddata$date)
summary(filleddata)
head(filleddata)
is.na(averagedate)
averagedate[is.na(averagedate)]<-0
View(averagedate)
filleddata<-data
filleddata$steps<-mapply(fillvalue,filleddata$steps,filleddata$date)
View(averagedate)
is.na(filleddate)
is.na(filleddata)
head(is.na(filleddata))
head(is.nan(filleddata))
sumStepsPerDay_filled<-aggregate(steps ~ date,filleddata,sum,na.action=na.pass,na.rm=TRUE)
filleddata$steps
fillvalue<-function(steps,interval){
filled<-NA
if (is.na(steps))
filled<-(average[average$interval==interval,"steps"])
else filled<-c(steps)
return(filled)
}
filleddata<-data
filleddata$steps<-mapply(fillvalue,filleddata$steps,filleddata$interval)
sumStepsPerDay_filled<-aggregate(steps ~ date,filleddata,sum,na.action=na.pass,na.rm=TRUE)
gplot(data=sumStepsPerDay_filled,
aes(sumStepsPerDay_filled$steps)) +
geom_histogram(binwidth=1000)+
labs(title="Histogram of the total number of steps taken each day")+
labs(x="Steps",y="Count")
gglot(data=sumStepsPerDay_filled,
aes(sumStepsPerDay_filled$steps)) +
geom_histogram(binwidth=1000)+
labs(title="Histogram of the total number of steps taken each day")+
labs(x="Steps",y="Count")
ggplot(data=sumStepsPerDay_filled,
aes(sumStepsPerDay_filled$steps)) +
geom_histogram(binwidth=1000)+
labs(title="Histogram of the total number of steps taken each day")+
labs(x="Steps",y="Count")
Stepsfilledmean<-as.integer(mean(sumStepsPerDay_filled$steps,na.rm=TRUE))
Stepsfilledmedian<-as.integer(median(sumStepsPerDay_filled$steps,na.rm=TRUE))
averagedate[is.na(averagedate)]
averagedate[is.na(averagedate),]
is.na(averagedate)
is.nan(averagedate)
head(averagedate)
table(averagedate)
head(averagedate)
data[is.na(data)]
data[is.na(data),"date"]
summary(data[is.na(data),"date"])
table(data[is.na(data),"date"])
count(data[is.na(data),"date"])
data[is.na(data),"date"]
aggregate(date, data[is.na(data),"date"])
aggregate(date, data[is.na(data),"date"],count)
aggregate(date, data[is.na(data),"date"],count.fields)
aggregate(date, data[is.na(data),"date"],count.fields())
count.fields(data[is.na(data),"date"])
sum(data[is.na(data),"date"])
data[is.na(data),"date"]
averagedate[averagedate$date==data[is.na(data),"date"],"step"]
averagedate[averagedate$date=="data[is.na(data),"date"]","step"]
missingdate<-data[is.na(data),"date"]
averagedate[averagedate$date==missingdate,"step"]
missingdate
averagedate[averagedate$date=="missingdate","step"]
averagedate[averagedate$date=="missingdate",]
averagedate[averagedate$date==missingdate,]
averagedate[averagedate$date=missingdate,]
averagedate[averagedate$date==missingdate,]
averagedate[,averagedate$date==missingdate]
averagedate[averagedate$date==missingdate,"steps"]
averagedate[averagedate$date==missingdate,"date""steps"]
averagedate[averagedate$date==missingdate,"steps","date"]
averagedate[averagedate$date==missingdate,"date"]
averagedate[averagedate$date==missingdate,"interval"]
averagedate[averagedate$date==missingdate,"steps"]
data[is.na(data)]
data[is.na(data),"date"]
missingdate1<-data[is.na(data$steps),]
View(missingdate1)
aggregate(date~steps,missingdate1,sum)
aggregate(date~steps,missingdate1,count.fields())
aggregate(date~steps,missingdate1,count.fields
)
aggregate(interval~date,missingdate1,sum)
aggregate(.~date,missingdate1,sum)
aggregate(.date,missingdate1,sum)
aggregate(*~date,missingdate1,sum)
aggregate(interval~date,missingdate1,sum)
mm<-aggregate(interval~date,missingdate1,sum)
mm$date
avergaedate[averagedate$date==mm$date,"steps"]
avergadate[averagdate$date==mm$date,"steps"]
averagedate[averagedate$date==mm$date,"steps"]
averagedate[averagedate$date=="mm$date","steps"]
averagedate[averagedate$date=="mm$date"]
averagedate[averagedate$date=="mm$date",]
averagedate[averagedate$date=="2012-10-01",]
averagedate[averagedate$date=="mm$date",]
as.data.frame(mm$date)
averagedate[averagedate$date=="as.data.frame(mm$date)",]
averagedate[averagedate$date==as.data.frame(mm$date),]
mm2<-as.data.frame(mm$date)
mm2
averagedate[averagedate$date==as.list(mm$date),]
averagedate[averagedate$date==mm2,]
averagedate[averagedate$date==mm2,]
averagedate[averagedate$date==mm2$`mm$date`,]
averagedate[averagedate$date %in% mm2$`mm$date`,]
averagedate[averagedate$date %in% data[is.na(data$steps),],]
averagedate[averagedate$date %in% data[is.na(data$steps),"date"],]
average[average$date %in% data[is.na(data$steps),"date"],]
average[average$interval %in% data[is.na(data$steps),"interval"],]
summary(average[average$interval %in% data[is.na(data$steps),"interval"],])
sum(average[average$interval %in% data[is.na(data$steps),"interval"],])
```
table(average[average$interval %in% data[is.na(data$steps),"interval"],])
summary(averagedate[averagedate$date %in% data[is.na(data$steps),"date"],])
summary(average[average$interval %in% data[is.na(data$steps),"interval"],])
help("weekdays")
weekdays(filleddata$date)
weekdays(as.Date(filleddata$date))
filleddata$weekday<-weekdays(as.Date(filleddata$date))
filleddata$workdayorweekend<- if (filleddata$weekday %in% c(Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("workday") else if (filleddata$weekday %in% c("Saturday", "Sunday")) return("weekend")
weekday.or.weekend <- function(date) {
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday") else if (day %in% c("Saturday", "Sunday"))
return("weekend") else stop("invalid date")
}
filleddata$workdayorweekends<-sapply(filleddata$weekday,FUN=weekday.or.weekend)
workday.or.weekend <- function(date) {
if (weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("workday") else if (day %in% c("Saturday", "Sunday"))
return("weekend") else stop("invalid date")
}
filleddata$workdayorweekends<-sapply(filleddata$weekday,FUN=workday.or.weekend)
orkday.or.weekend <- function(date) {
if (weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("workday") else if (day %in% c("Saturday", "Sunday"))
return("weekend") else stop("invalid date")
}
filleddata$workdayorweekends<-sapply(filleddata,FUN=workday.or.weekend)
workday.or.weekend <- function(date) {
if (weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("workday") else if (day %in% c("Saturday", "Sunday"))
return("weekend") else stop("invalid date")
}
filleddata$workdayorweekends<-sapply(filleddata,FUN=workday.or.weekend)
View(weekday.or.weekend)
filleddata$weekday<-weekdays(as.Date(filleddata$date))
workday.or.weekend <- function(date) {
if (weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("workday") else if (day %in% c("Saturday", "Sunday"))
return("weekend") else stop("invalid date")
}
filleddata$workdayorweekends<-sapply(filleddata%weekday,FUN=workday.or.weekend)
filleddata$weekday<-weekdays(as.Date(filleddata$date))
workday.or.weekend <- function(date) {
if (weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("workday") else if (day %in% c("Saturday", "Sunday"))
return("weekend") else stop("invalid date")
}
filleddata$workdayorweekends<-sapply(filleddata$weekday,FUN=workday.or.weekend)
workday.or.weekend <- function(date) {
weekday<-date
if (weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("workday") else if (day %in% c("Saturday", "Sunday"))
return("weekend") else stop("invalid date")
}
filleddata$workdayorweekends<-sapply(filleddata$weekday,FUN=workday.or.weekend)
filleddata$weekday<-weekdays(as.Date(filleddata$date))
workday.or.weekend <- function(date) {
weekday<-date
if (weekday %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("workday") else if (weekday %in% c("Saturday", "Sunday"))
return("weekend") else stop("invalid date")
}
filleddata$workdayorweekends<-sapply(filleddata$weekday,FUN=workday.or.weekend)
summary(filleddata)
averagewithworkdays<-aggregate(steps~interval+workdayorweekends,data=filleddata,mean)
ggplot(averageswithworkdays,
aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5-minute interval") +
ylab("Number of steps")
ggplot(averagewithworkdays,
aes(interval, steps)) +
geom_line() +
facet_grid(day ~ .) +
xlab("5-minute interval") +
ylab("Number of steps")
ggplot(averagewithworkdays,
aes(interval, steps)) +
geom_line() +
facet_grid(workdayorweekends ~ .) +
xlab("5-minute interval") +
ylab("Number of steps")
install.packages(pdflatex)
install.packages("pdflatex")
install.packages("MikTex")
knit2html()
library(knitr)
knit2html()
knit2html(PA1_template.Rmd)
knit2html(PA1_template.rmd)
knit2html("PA1_template.rmd")
install.packages("Pandoc")
install.packages("pandoc")
